version: "3.3"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    restart: always
    environment:
      - cluster.name=elasticsearch
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9200"]
        interval: 30s
        timeout: 10s
        retries: 5
    networks:
      - parser-network
  kibana:
    container_name: kibana
    build:
      context: .
      dockerfile: ./kibana.Dockerfile
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200    # address of elasticsearch docker container which kibana will connect
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch                                   # kibana will start when elasticsearch has started
    networks:
      - parser-network
  container-parser:
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RABBIT_URL=amqp://guest:guest@rabbitmq:5672/
      - AZURE_STORAGE_ACCOUNT=kozgotstorage
      - AZURE_STORAGE_ACCESS_KEY=actual-key-here
      - AZURE_STORAGE_CONTAINER=testcontainer
      - LOG_ENTRIES_EXCHANGE=logentries_direct_durable
      - PROCESS_ENTRY_ROUTING_KEY=process-entry
    build:
      context: .
      dockerfile: ./parser/.devcontainer/Dockerfile
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./parser:/workspace
    command: sleep infinity
    links:
      - container-elasticuploader
    networks:
      - parser-network
  container-postprocessor:
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RABBIT_URL=amqp://guest:guest@rabbitmq:5672/
      - PROCESSED_DATA_EXCHANGE=processeddata_direct_durable
      - SAVE_DATA_ROUTING_KEY=save-data
      - LOG_ENTRIES_EXCHANGE=logentries_direct_durable
      - PROCESSING_QUEUE=processing_queue_durable
      - PROCESS_ENTRY_ROUTING_KEY=process-entry
    build:
      context: .
      dockerfile: ./postprocessor/.devcontainer/Dockerfile
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./postprocessor:/workspace
    command: sleep infinity
    links:
      - container-elasticuploader
    networks:
      - parser-network
  rabbitmq:
    image: rabbitmq:3-management
    command: rabbitmq-server
    ports:
      - 15672:15672
    volumes:
      - rabbitmq_data:/data
    expose:
      - 5672
      - 15672
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
    networks:
      - parser-network
  container-elasticuploader:
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RABBIT_URL=amqp://guest:guest@rabbitmq:5672/
      - PROCESSED_DATA_EXCHANGE=processeddata_direct_durable
      - SAVE_DATA_QUEUE=save_data_queue_durable
      - SAVE_DATA_ROUTING_KEY=save-data
    build:
      context: .
      dockerfile: ./elasticuploader/.devcontainer/Dockerfile
    depends_on:
      - rabbitmq
    restart: on-failure
    volumes:
      - ./elasticuploader:/workspace
    command: sleep infinity
    networks:
      - parser-network
 
volumes:
  elasticsearch-data:
  rabbitmq_data:

networks:
  parser-network:
    driver: bridge